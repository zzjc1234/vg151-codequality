
name: Build and Test

on:
  push:
    branches: [ master, macos ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential llvm-15-dev clang-15-dev clang-tidy-15
        
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install llvm cmake
        
    - name: Configure CMake
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cmake -DCMAKE_BUILD_TYPE=Release -S . -B build
        elif [ "$RUNNER_OS" == "macOS" ]; then
          LLVM_DIR="$(brew --prefix llvm)/lib/cmake/llvm"
          Clang_DIR="$(brew --prefix llvm)/lib/cmake/clang"
          cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_DIR="$LLVM_DIR" -DClang_DIR="$Clang_DIR" -S . -B build
        fi
      env:
        RUNNER_OS: ${{ runner.os }}
        
    - name: Build
      run: cmake --build build --config Release
    
    - name: Test build output
      run: |
        if [ -f "build/codequality/libcodequality.so" ] || [ -f "build/codequality/libcodequality.dylib" ]; then
          echo "Build successful!"
          ls -la build/codequality/libcodequality.*
        else
          echo "Build failed - library file not found"
          exit 1
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: libcodequality-${{ runner.os }}
        path: build/codequality/libcodequality.*
